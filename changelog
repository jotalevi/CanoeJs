V0.6.1
    - IMPROVEMENT: Changed Widget.root from private to protected for better inheritance
    - IMPROVEMENT: Child widgets can now access root element for custom update logic
    - IMPROVEMENT: Enables more flexible widget implementations and custom update methods
    - IMPROVEMENT: Better support for complex widgets that need direct DOM manipulation
    - IMPROVEMENT: Allows widgets to implement custom update strategies
    - IMPROVEMENT: Enables widgets to access their rendered root element for animations and effects

V0.6.0
    - MAJOR: Removed React-style hooks system completely
    - MAJOR: Simplified to global state management only (Canoe.getState() and Canoe.setState())
    - FEATURE: Added automatic widget update system that detects state dependencies
    - FEATURE: Widgets now automatically update when their state dependencies change
    - FEATURE: Added Canoe.forceRender() method for forced re-renders
    - FEATURE: Added Canoe.debugRender() method for debugging state changes
    - FEATURE: Added robust state change detection with hasStateChanged() method
    - IMPROVEMENT: Enhanced re-rendering system with better cache management
    - IMPROVEMENT: Improved Render.ts cache system to be less aggressive
    - IMPROVEMENT: Better performance with intelligent caching
    - IMPROVEMENT: Enhanced state comparison for nested objects
    - FIX: Fixed widgets not re-rendering when state changes
    - FIX: Resolved hash-based optimization being too aggressive
    - FIX: Fixed cache preventing necessary re-renders
    - DOCS: Updated README with global state management examples
    - DOCS: Added comprehensive documentation for automatic widget updates
    - BREAKING: Removed useState, useEffect, useMemo, useCallback, useRef hooks
    - BREAKING: Removed hooks directory and all related functionality

V0.5.3
    - FEATURE: Added automatic dependency tracking in Widget class
    - FEATURE: Widgets can now automatically detect which state properties they use
    - FEATURE: Added renderWithDependencyTracking() method
    - FEATURE: Added getStateDependencies() method to check widget dependencies
    - FEATURE: Added subscribeToDetectedDependencies() for automatic subscriptions
    - IMPROVEMENT: Enhanced Widget class with state dependency management
    - IMPROVEMENT: Better widget lifecycle management
    - IMPROVEMENT: Automatic cleanup of state subscriptions
    - DOCS: Added examples of automatic widget updates
    - DOCS: Updated documentation with new widget features

V0.5.2
    - Fix: build and dev scripts now work on Windows (using 'set NODE_ENV')
    - Fix: removed 'watch' and 'outdir' from esbuild config to prevent errors
    - Fix: 'serve:dev' script no longer uses unsupported '--dev' option
    - Fix: template now compiles correctly with local canoejs version
V0.3.9
    - Added EventLinker
    - Added Input ImputLabel and InputGroup widgets
    - Refactored and improved Render
    - Refactored and improved Router 
    - Minor changes in Canoe class
    - Added Helpers for url normalization
    - Changes to readme
V0.3.5
    - Removed package-lock.json
V0.3.5
    - Mostly version bump.
    - Finalized Router errors, refactored some stuf before.
    - Changes to main CSS along with the main index.html for the templating (its now 100% sized).
V0.3.4
    - Fixed Router
    - Added Canoe.setTitle method for changing documet title
    - Attempt to fix Serve script errors (regarding SPA Support)
V0.3.1
    - Fixed Router
    - Added Canoe.setTitle method for changing documet title
    - Attempt to fix Serve script errors (regarding SPA Support)
V0.3.0
    - Changed Serve scripts to suport SPAs
V0.2.8
    - Added ChangeLog to repo
    - Fixed 'fadeAlert' function in util js
    - Updates to Template project
    - Added basic router and dynamic path (with :var)
V0.2.7
    - Fixed missing 'to' field in Link widget
    - Fixed missing field assignations in several widgets
    - Updated Template project

V0.6.2
    - FIX: Prevented event handler duplication on widgets after multiple renders
    - IMPROVEMENT: EventLinker now uses a WeakMap to track and clean up event listeners per element
    - IMPROVEMENT: Before adding a new event listener, any previous listener of the same type is removed from the element
    - IMPROVEMENT: No more exponential event firing when re-rendering widgets with event handlers
    - TECHNICAL: Event system is now robust against DOM node replacement and repeated renders